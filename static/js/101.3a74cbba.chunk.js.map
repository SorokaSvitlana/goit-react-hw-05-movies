{"version":3,"file":"static/js/101.3a74cbba.chunk.js","mappings":"oOACMA,EAAW,+BACXC,EAAU,mCAED,SAAgBC,EAA/B,+CAAe,OAAf,oBAAe,WAAmCC,GAAnC,gGAEcC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,kBACgCE,EADhC,oBAFd,cAEHE,EAFG,yBAIAA,EAASC,KAAKC,SAJd,sCAMD,IAAIC,MAAM,KAAMC,SANf,gF,iDC2Bf,EA7Be,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAChB,GAKIC,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAef,OACE,kBAAML,SAAUG,GAbG,SAACP,EAAMW,GACrBX,EAAKY,cACRH,EAAOG,YAAc,CACnBC,KAAM,WACNV,QAAS,iCAGsB,IAA/BW,OAAOC,KAAKN,GAAQO,SACtBZ,EAAS,CAAEa,MAAOjB,EAAKY,cACvBJ,IAEH,IAEC,UACGC,EAAOG,cAAe,mCAAMH,EAAOG,mBAAb,aAAM,EAAoBT,WACjD,0BAAOe,KAAK,cAAcL,KAAK,QAAWP,EAAS,kBACnD,mBAAQO,KAAK,SAAb,SAAsB,aAG3B,E,iBCeD,EApCe,WACb,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BL,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAYJ,EAAaK,IAAI,SAuBnC,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEIH,GAAW,GAFf,SAG2B9B,EAAkB+B,GAH7C,OAGU5B,EAHV,OAIIsB,EAAUtB,GACV2B,GAAW,GALf,gDAOII,QAAQC,IAAR,MAPJ,0DAJc,sBACTJ,GADS,mCAcdK,EACD,GAAE,CAACT,EAAcI,KAOhB,2BACGF,IAAW,SAACQ,EAAA,EAAD,KACZ,SAAC,EAAD,CAAQ7B,SAPZ,SAAkBJ,GAChBwB,EAAgBxB,EACjB,KAMG,SAACkC,EAAA,EAAD,CAAWC,MAAOf,MAGvB,C,2DCnBD,IAnBkB,SAAC,GAAe,IAAbe,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAYF,EAASG,SAASC,SAAS,WAAa,GAAK,UAE/D,OACE,wBACGL,EAAMM,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKL,GAAL,OAAiBI,EAAQE,IAAMC,MAAO,CAAEC,KAAMV,GAAtD,SACGM,EAAQK,SAFJL,EAAQE,GAMpB,KAGN,C","sources":["API/GetSearchMovies.jsx","components/Search/Search.jsx","Pages/Movies.jsx","components/MovieInformation/MovieList.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6c7e0dbf534467d4aac979504763e884'\n\nexport default async function  fetchSearchMovies (movie) {\n    try{\n      const response = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movie}&language=en-US`)\n        return response.data.results;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    }","import { useForm } from 'react-hook-form';\n\nconst Search = ({ onSubmit }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmitForm = (data, e) => {\n    if (!data.movieSearch) {\n      errors.movieSearch = {\n        type: 'required',\n        message: 'Search field cannot be empty',\n      };\n    }\n    if (Object.keys(errors).length === 0) {\n      onSubmit({ query: data.movieSearch });\n      reset();\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmitForm)}>\n      {errors.movieSearch && <div>{errors.movieSearch?.message}</div>}\n      <input name=\"movieSearch\" type=\"text\" {...register('movieSearch')} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default Search;","import fetchSearchMovies from 'API/GetSearchMovies';\nimport Loader from 'components/Loader';\nimport MovieList from 'components/MovieInformation/MovieList';\nimport Search from 'components/Search/Search';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setLoading(true);\n        const response = await fetchSearchMovies(movieName);\n        setMovies(response);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovies();\n  }, [searchParams, movieName]);\n\n  function onSubmit(data) {\n    setSearchParams(data);\n  }\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <Search onSubmit={onSubmit} />\n      <MovieList array={movies} />\n    </div>\n  );\n};\n\nexport default Movies;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst MovieList = ({ array }) => {\n  const location = useLocation();\n  const routeName = location.pathname.includes('/movies') ? '' : 'movies/';\n\n  return (\n    <ul>\n      {array.map(element => {\n        return (\n          <li key={element.id}>\n            <Link to={`${routeName}${element.id}`} state={{ from: location }}>\n              {element.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;"],"names":["BASE_URL","API_KEY","fetchSearchMovies","movie","axios","response","data","results","Error","message","onSubmit","useForm","register","handleSubmit","reset","errors","formState","e","movieSearch","type","Object","keys","length","query","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","movieName","get","useEffect","console","log","getMovies","Loader","MovieList","array","location","useLocation","routeName","pathname","includes","map","element","to","id","state","from","title"],"sourceRoot":""}