{"version":3,"file":"static/js/75.2b11e9db.chunk.js","mappings":"kOACMA,EAAW,+BACXC,EAAU,mCAED,SAAeC,EAA9B,+CAAe,OAAf,oBAAe,WAAiCC,GAAjC,gGAEYC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,kBAA+BG,EAA/B,oBAAkDF,IAF9D,cAELI,EAFK,yBAGJA,EAASC,MAHL,sCAKL,IAAIC,MAAM,KAAMC,SALX,gF,uCCwBf,EA3BkB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC1B,OACE,4BACE,gBACEC,IAAG,0CAAqCF,EAAMG,aAC9CC,IAAKJ,EAAMK,kBAEb,2BACI,2BACE,wBAAKL,EAAMK,kBACX,yBAAG,kBAAgBL,EAAMM,aAAe,GAAK,KAAKC,QAAQ,GAAK,WAGjE,2BACE,wBAAI,cACJ,uBAAIP,EAAMQ,eAEZ,2BACE,wBAAI,YACJ,uBAAIP,EAAOQ,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,gBAM9C,E,QCkBD,EArCqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOb,EAAP,KAAcc,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAec,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQvB,GAAYwB,EAAAA,EAAAA,MAAZxB,QAgBR,OAdAyB,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIF,GAAW,GAFf,SAG2BxB,EAAkBC,GAH7C,OAGUE,EAHV,OAIIkB,EAASlB,GACTmB,EAAUnB,EAASK,QACnBgB,GAAW,GANf,kDAQIG,QAAQC,IAAI,SARhB,2DADc,uBAAC,WAAD,wBAYdC,EACD,GAAE,CAAC5B,KAEF,2BACGsB,IAAW,SAACO,EAAA,EAAD,KACZ,SAAC,KAAD,CAAMC,GAAG,IAAT,SAAa,aACb,SAAC,EAAD,CAAWxB,MAAOA,EAAOC,OAAQA,KACjC,wBAAI,4BACJ,2BACE,yBAAI,SAAC,KAAD,CAAMuB,GAAG,OAAT,SAAgB,YACpB,yBAAI,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAEzB,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAACH,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API/GetMovieDetails.jsx","components/MovieInfo.jsx","components/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6c7e0dbf534467d4aac979504763e884'\n\nexport default async function fetchMovieDetails(movieId) {\n   try{  \n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}","\nconst MovieInfo = ({ movie, genres }) => {\n  return (\n    <div>\n      <img\n        src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n        alt={movie.original_title}\n      />\n      <ul>\n          <li>\n            <h2>{movie.original_title}</h2>\n            <p> User Score:  {(movie.vote_average / 10 * 100).toFixed(2) + '%'}\n            </p>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </li>\n          <li>\n            <h4>Genres</h4>\n            <p>{genres.map(el => el.name).join(', ')}</p>\n          </li>\n\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieInfo;","import fetchMovieDetails from 'API/GetMovieDetails';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, Link } from 'react-router-dom';\nimport MovieInfo from './MovieInfo';\nimport Loader from './Loader';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieById() {\n      try {\n        setLoading(true);\n        const response = await fetchMovieDetails(movieId);\n        setMovie(response);\n        setGenres(response.genres);\n        setLoading(false);\n      } catch {\n        console.log('error');\n      } \n    }\n    getMovieById();\n  }, [movieId]);\n  return (\n    <div>\n      {loading && <Loader />}\n      <Link to='/'>Go back</Link>\n      <MovieInfo movie={movie} genres={genres} />\n      <h2>Additional information</h2>\n      <ul>\n        <li><Link to=\"cast\">Cast</Link></li>\n        <li><Link to=\"reviews\">Reviews</Link></li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchMovieDetails","movieId","axios","response","data","Error","message","movie","genres","src","poster_path","alt","original_title","vote_average","toFixed","overview","map","el","name","join","useState","setMovie","setGenres","loading","setLoading","useParams","useEffect","console","log","getMovieById","Loader","to","Suspense","fallback"],"sourceRoot":""}